{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"Text Only<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"com-sci/algorithms/","title":"fghjk","text":""},{"location":"com-sci/algorithms/#topic1","title":"Topic1","text":""},{"location":"com-sci/algorithms/about/","title":"About the book","text":"<p>Name: Grokking Algorithms, Second Edition</p> <p>Author: Aditya Bhargava</p> <p>URL : Oreilly</p>"},{"location":"com-sci/algorithms/about/#why-reading-this-book","title":"Why Reading this book?","text":"<p>This book is part of many blog posts and YouTube videos, and it is praised for the manner in which it teaches algorithms.\u00a0</p> <p>I've been in the industry for a decade now. Fortunately or unfortunately, I was able to survive without understanding the various algorithms that are deemed must-know for software engineers. Algorithms are not only for software engineers, and being a data engineer is not a valid reason to skip learning them. They say it's better late than never, so now I've started learning them.\u00a0</p>"},{"location":"com-sci/algorithms/big-o-notation/","title":"Big O Notation","text":"<ul> <li>A notation that tells us how fast an algortihm is.</li> <li>It's a measures the fastness of algorithm in terms of operations (not in seconds).</li> <li>Big O denotes worst case run time.</li> </ul> <p>Big O notation: O(n) -&gt; Here n stands for the number of  operations.</p>"},{"location":"com-sci/algorithms/big-o-notation/#example","title":"Example","text":"Notation Example O(log n) Binary Search O(n) Simple search O(n.log n) Quick Sort O(n2) Selection sort O(n!) The traveling salesperson"},{"location":"com-sci/algorithms/binary-search/","title":"Binary Search","text":"<p>This is a search algorithm. Much more faster than the simple search.</p>"},{"location":"com-sci/algorithms/binary-search/#simple-search","title":"Simple Search","text":"<p>Simple search involves checking each element on-by-one.</p> <ul> <li>The time taken for the search is linear; bigger the element longer time it takes.</li> <li>Not effecient for bigger array.</li> </ul>"},{"location":"com-sci/algorithms/binary-search/#how-it-works","title":"How it works?","text":"<p>Lets say we need to identify an element from a list containing 100 elements.</p> <p>Instead of searching the element from the start and incrementing one-by-one, this algorithms goes to the middle of the element and verifies as follows. 1. is the element looking for is matching 2. if not matching, the element is greater or smaller than the middle element.</p> <p>With one stroke half the elements turns not worth searching. The above steps are repeated again and again, till we are able to find the element.</p> Text Only<pre><code>        100 \u2192 50 \u2192 25 \u2192 13 \u2192 7 \u2192 4 \u2192 2 \u2192 1\n</code></pre> <p><sub>Each arrow reperesent an operation <p>For an array of 100 elements, we can search for an element in 7 steps (worst-case).</p>"},{"location":"com-sci/algorithms/binary-search/#big-o-notation","title":"Big O Notation","text":"<p>Big O notation: <code>log(n)</code></p> <p>Let's say the number of elements are 1000. It takes 10 operations to complete the search.</p> <p></p> <ul> <li>Binary Search takes logarithmic time.</li> <li>For a larger arrays, the binary search is much better than simple search.</li> </ul>"},{"location":"com-sci/algorithms/binary-search/#prerequisites","title":"Prerequisites","text":"<p>The algorithm wants the list elements to be in sorted.</p>"}]}